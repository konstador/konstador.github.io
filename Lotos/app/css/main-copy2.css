@import url(main-copy2.css);

/*# sourceMappingURL=data:application/json;charset=utf8;base64,{"version":3,"sources":["main-copy2.scss"],"names":[],"mappings":"AAEA,8CAA4C","file":"main-copy2.css","sourcesContent":["\n\n@import url(main-copy2.css)(max-width: 800px);\n// // BLOCKS *****************************************************\n\n// .btn-circle-cross,\n// .btn-circle-chek,\n// .btn-circle-down{\n// \tdisplay: block;\n// \tposition: relative;\n// \tcursor: pointer;\n// \twidth: 60px;\n// \theight: 60px;\n// \tbackground-color: $main-color;\n// \tbackground-image: linear-gradient(to top, rgba(247, 142, 106, 0) 0%, #fc66a2 100%);\n// \tborder-radius: 50%;\n// \t&:hover{\n// \t\tbox-shadow: 0 0 30px rgba(0, 0, 0, 0.1);\n// \t\tbackground-color: $light-text;\n// \t\tbackground-image: none;\n// \t}\n// \t&:hover i::before{\n// \tdisplay: block;\n// \tbackground-image: linear-gradient(to top, rgba(247, 142, 106, 0) 0%, #fc66a2 100%);\n// \tbackground-clip: text;\n// \t-webkit-background-clip: text;\n// \tcolor: transparent;\n// \t}\n\n// \ti{\n// \t\tposition: absolute;\n// \t\tcolor:#ffffff;\n// \t\tfont-size: 20px;\n// \t\ttop:35%;\n// \t\tleft:35%;\n// \t}\n// }\n// .btn-circle-down i{\n// \tleft:45%;\n\n// }\n\n\n\n// .scrool-btn{\n// \tposition: relative;\n// \tcursor: pointer;\n// \twidth: 30px;\n// \theight: 30px;\n// \tbackground-color: #f78e6a;\n// \tbackground-image: linear-gradient(to top, rgba(247, 142, 106, 0) 0%, #fc66a2 100%);\n// \tborder-radius: 50%;\n// \t&:hover{\n// \t\tbox-shadow: 0 0 30px rgba(0, 0, 0, 0.1);\n// \t\tbackground-color: $light-text;\n// \t\tbackground-image: none;\n// \t}\n// \t&:hover i::before{\n// \tdisplay: block;\n// \tbackground-image: linear-gradient(to top, rgba(247, 142, 106, 0) 0%, #fc66a2 100%);\n// \tbackground-clip: text;\n// \t-webkit-background-clip: text;\n// \tcolor: transparent;\n// \t}\n// \ti{\n// \t\tposition: absolute;\n// \t\tcolor:#ffffff;\n// \t\tfont-size: 6px;\n// \t\ttop:40%;\n// \t\tleft:40%;\n// \t}\n// }\n// .btn-long{\n// \tdisplay:flex;\n// \twidth: 285px;\n// \theight: 60px;\n// \tbox-shadow: 11px 11px 50px rgba(0, 0, 0, 0.1);\n// \tborder-radius: 29px;\n// \tbackground-color: #f78e6a;\n// \t&_text{\n// \t\tcolor: #ffffff;\n// \t\tfont-family: Geometria Regular,sans-serif;\n// \t\tpadding: 17px;\n// \t\tfont-size: 16px;\n// \t\tfont-weight: 400;\n// \t\tline-height: 24px;\n// \t}\n// \t&_circle{\n// \tdisplay: block;\n// \tposition: relative;\n// \tcursor: pointer;\n// \twidth: 60px;\n// \theight: 60px;\n// \tbackground-color: $main-color;\n// \tbackground-image: linear-gradient(to top, rgba(247, 142, 106, 0) 0%, #fc66a2 100%);\n// \tborder-radius: 50%;\n// \t\ti{\n// \t\t\tposition: absolute;\n// \t\t\tcolor:#ffffff;\n// \t\t\tfont-size: 20px;\n// \t\t\ttop:35%;\n// \t\t\tleft:35%;\n// \t\t}\n// \t}\n// }\n// .btn-long:hover{\n// \tbackground-color: #ffffff;\n// \tcursor: pointer;\n// \t.btn-long_text{\n// \t\tbackground-image: linear-gradient(to right, #f78e6a 0%, #fc66a2 100%);\n// \t\tbackground-clip: text;\n// \t\t-webkit-background-clip: text;\n// \t\tcolor: transparent;\n// \t}\n// }\n\n// .footer {\n// \twidth: 408px;\n// \t&_scroll{\n// \t\torder:-1;\n// \t}\n\t\n// \t&_sroll-text{\n// \t\tdisplay: none;\n\t\t\n// \t}\n// \t&_social a{\n// \t\t\tmargin-right: 30px;\n// \t\t\tfont-family:Montserrat Regular,sans-serif;\n// \t\t\tfont-size: 10px;\n// \t\t\tfont-weight:600;\n// \t\t\tline-height: 24px;\n// \t\t\ttext-transform: uppercase;\n// \t\t\tcolor: #000000;\n// \t}\n// }\n// .left-content{\n// \twidth: 320px;\n// \torder: 1;\n// \tflex-wrap: wrap;\n// }\n\n// .logo {\n// \tposition:absolute;\n// \ttop:30px;\n// \tleft:47%;\n// }\n\n// .header{\n// \tpadding-top: 33px;\t\n// }\n\n// .header-menu {\n// \tleft:30px;\n\t\n// \tli,\n// \t&_text {\n// \tfont-size: 16px;\n// \t}\n\t\n// \tli{\n// \tmargin-bottom: 30px;\n// \t}\n\t\n// \tli:hover{\n// \tfont-family: \"Geometria Bold\", sans-serif;\n// \tcursor: pointer;\n// \t}\n\t\n// \t&_text{\n// \tposition: absolute;\n// \ttop:0;\n// \tleft:40px;\n// \ttransition:0.5s;\n// \t}\n\t\n// \t&_list{\n// \tposition: absolute;\n// \tpadding-top:10px;\n// \tpadding-right:10px;\n// \tpadding-left:10px;\n// \ttop:-500px;\n// \tleft:40px;\n// \ttransition: 0.8s;\n// \tbackground-color: #f78e6a;\n// \t}\n\t\n// \t&_btn-close {\n// \tposition: absolute;\n// \ttop:0;\n// \tleft:0px;\n// \tdisplay: none;\n// \t}\n\t\n// \t&_btn-open{\n// \tz-index: 10;\t\n// \t}\n// }\n// #btn-menu{\n// \tposition: absolute;\n// \ttop:-2000px;\n// }\n// #btn-menu:checked ~ .header-menu_text{\n// \ttop:-200px;\n// }\n// #btn-menu:checked ~ .header-menu_btn-open{\n// \tdisplay: none;\n// }\n// #btn-menu:checked ~ .header-menu_list{\n// \ttop: 0;\n// }\n// #btn-menu:checked ~ .header-menu_btn-close{\n// \tdisplay: block;\n// }\n\n// #btn-menu-classes{\n// \tposition: absolute;\n// \ttop:-20px;\n// }\n// #btn-menu-classes:checked ~ .header-menu_text{\n// \ttop:-200px;\n// }\n// #btn-menu-classes:checked ~ .header-menu_btn-open{\n// \tdisplay: none;\n// }\n// #btn-menu-classes:checked ~ .header-menu_list{\n// \ttop: 0;\n// }\n// #btn-menu-classes:checked ~ .header-menu_btn-close{\n// \tdisplay: block;\n// }\n\n// .wraper{\n// \tdisplay:flex;\n// \tjustify-content:space-between;\n// \twidth:100%;\n// }\n\n// .text{\n// \tcolor: #000000;\n// \tfont-family: Geometria Light,sans-serif;\n// \tfont-size: 16px;\n// }\n// .variables span{\n// \t\twidth: 65px;\n// \t}\n\n// .discription{\n// \twidth: 435px;\n// \tmargin-top: 115px;\n// \tmargin-left: 0px;\n\n// }\n// .pagenation{\n// \tposition:absolute;\n// \ttop:87%;\n// \tright:30px;\n// }\n\n\n// // BODY *****************************************\n// html{\n// \tbackground-color: black;\n// }\n\n// body{\n// \tbackground-color: black;\n// \tmargin: 0 auto;\n// \tmax-width: 768px;\n// \tposition:relative;\n\t\n// }\n// section{\n// \tpadding: 30px 30px;\n// \theight: 1024px;\n// \twidth: 768px;\n// \tbackground-color: #fbf5f4;\n// \tmargin-bottom:120px;\n// \tposition: relative;\n// }\n\n\n\n\n// // main section ***************************************************\n\n// .main_middle{\n// \tdisplay: flex;\n// \tmargin-bottom: 175px;\n// \tjustify-content:space-between;\n// \tmargin-top:160px;\n// }\n\n// .main_photo{\n// \t\toverflow:hidden;\n// \t\twidth:  300px;\n// \t\timg{\n// \t\t\twidth: 390px;\n// \t\t\ttransform:scale(-1,1);\n// \t\t}\n\n// \t}\n// .main_button{\n// \t\t\twidth: 50px;\n// \t\t\theight: 50px;\n\t\t\n// \t\ti {\n// \t\t\ttop:30%;\n// \t\t\tleft:33%;\n// \t\t}\n// \t}\n// .top{\n// \tdisplay: flex;\n// \tjustify-content: flex-end;\n// \tmargin-left: 50%;\n// }\n// .top_text{\n// \t\tmax-width:936px;\n// \t\tcolor: $dark-text;\n// \t\tfont-family: \"Geometria Regular\", sans-serif;\n// \t\tfont-size: 18px;\n// \t\tfont-weight: 400;\n// \t\ttext-align:top;\n// \t\tdisplay:none;\n// \t&::before{\n// \t\tdisplay: inline-block;\n// \t\tcontent:\" \";\n// \t\tbackground-color: $main-color;\n// \t\twidth: 6px;\n// \t\theight: 6px;\n// \t\tborder-radius: 50%;\n// \t\tvertical-align: middle;\n// \t\tmargin-right: 10px;\n\n// \t}\n// }\n\n// .top_phone{\n// \t\tcolor: $dark-text;\n// \t\tfont-family: \"Montserrat \", sans-serif;\n// \t\tfont-size: 18px;\n// \t\tfont-weight: 400;\n// \t\tdisplay: block;\n\n// \t}\n\n// .title-section{\n// \tmax-width: 480px;\n// \tmargin-top: 210px;\n// \t&_subtitle {\n// \t\tdisplay: inline-block;\n// \t\tbackground-image: linear-gradient(to top, rgba(247, 142, 106, 0) 0%, #fc66a2 100%);\n// \t\tbackground-clip: text;\n// \t\t-webkit-background-clip: text;\n// \t\tcolor: transparent;\n// \t\tfont-family: \"Geometria Regular\";\n// \t\tfont-size: 18px;\n// \t\tmargin-bottom: 0px;\n// \t\ttransform: rotate(-180deg);\n// \t\twriting-mode: vertical-rl;\n\n// \t}\n// \t&_button-wrapper{\n// \t\tdisplay: inline-block;\n\n// \t}\n// \t&_invite{\n// \t\tdisplay: inline-block;\n// \t\tmax-width: 325px;\n// \t\tcolor: $dark-text;\n// \t\tfont-family: \"Geometria Light\";\n// \t\tfont-size: 20px;\n// \t\tfont-weight: 300;\n// \t\tline-height: 30px;\n// \t\tvertical-align: top;\n// \t\tmargin-left: 20px;\n// \t}\n// }\n// h1{\n// \tbackground-image: linear-gradient(to top, rgba(247, 142, 106, 0) 0%, #fc66a2 100%);\n// \tbackground-clip: text;\n// \t-webkit-background-clip: text;\n// \tcolor: transparent;\n// \tfont-family: \"Geometria Medium\";\n// \tfont-size: 150px;\n// \tdisplay: inline-block;\n// \tletter-spacing: -7.5px;\n// }\n\n// // classes section ***********************************************\n\n\n\n// .classes{\n// \t&_photo{\n// \t\twidth:  213px;\n// \t\tmargin-left:40px;\n// \t\timg{\n// \t\t\twidth: 100%;\n// \t\t\ttransform:scale(-1,1);\n// \t\t}\n// \t}\n// \t&_discription{\n// \t\tmargin-top: 140px;\n// \t}\n// \t&_variables{\n// \t\tmargin-left: 40px;\n\n// \t}\n\t\n// }\n\n\n// // test section ********************************************\n// .test{\n// \t&_middle {\n// \t\tdisplay: flex;\n// \t\tmargin-bottom:169px;\n// \t}\n// \t&_photo{\n// \t\toverflow:hidden;\n// \t\twidth:  300px;\n// \t\tmargin-top:260px;\n// \t\timg{\n// \t\t\tdisplay:block;\n// \t\t\twidth: 375px;\n// \t\t\ttransform:scale(-1,1);\n// \t\t}\n// \t}\n\t\n// }\n// .form {\n// \t&_title{\n// \tmargin-top: 180px;\n// }\n\n// // treiners ***********************************************\n// .treiners{\n// \t&_photo{\n// \toverflow:hidden;\n// \t\twidth:  231px;\n// \t\timg{\n// \t\t\tdisplay:block;\n// \t\t\twidth: 100%;\n// \t\t}\n// \t}\n// \t&_middle{\n// \tpadding-bottom: 15px;\n\t\n// \t}\n// \t&-discription{\n// \t\tmargin-top: 115px;\n// \t}\n// \t&_discription-title{\n// \t\theight: 60px;}\n\n// \t&_variables{\n// \t\tmargin-left: 30px;\n// \t\tmargin-top:110px;\n// \t}\n// \t.variables_caption{\n// \t\twidth: 83px;\n// \t}\n// }\n\n// .treiners_discription-content{\n// \tposition:absolute;\n// \tdisplay: none;\n// }\n// .treiners_discription-content--active{\n// \tdisplay: block;\n// }\n\n\n\n// // abonements *************************************************\n// .abonements{\n// \t&_middle{\n// \t\tpadding-bottom:180px;\n// \t}\n// \t&_table {\n// \t\tborder-spacing:5px;\n// \t\tborder-collapse:separate;\n// \t\tmargin-top: 190px;\n// \t\twidth:560px;\n\t\t\n// \t}\n\t\n// \t&_photo{\n// \t\twidth:  335px;\n// \t\tmargin-top:200px;\n// \t\tmargin-left: -165px;\n// \t\timg{\n// \t\t\tdisplay:block;\n// \t\t\twidth: 100%;\n// \t\t\ttransform:scale(-1,1);\n// \t\t}\n// \t}\n\n// }\n\n\n// // schelude***************************************************\n// .schedule{\n// \t&_download-button{\n// \t\twidth: 20px;\n// \t\theight: 20px;\n// \t\tmargin-left:10px;\n// \t\tmargin-right: 10px;\n\n// \t\ti{\n// \t\t\tleft:40%;\n// \t\t\ttop: 25%;\n// \t\t}\n// \t}\n// \ttable{\n// \tborder-spacing:2px;\n// \tfont-size:9px;\n// \t\ttd{\n// \t\theight: 50px;\n// \t\tfont-family: Geometria Regular, sans-serif;\n// \t\twidth: 100px;\n// \t\tline-height: 15px;\n// \t\t}\n// \t}\n// }\n// .schedule .top-content,\n// .schedule .middle-content{\n// \tdisplay: flex;\n// \tjustify-content: space-between;\n\n// }\n\n// // review *******************************************\n// .review{\n// \t&_photo{\n// \tmargin-top: 105px;\n// \tmargin-left: -390px\n// \t}\n// \t&_middle{\n// \tpadding-bottom: 15px;\n// \t}\n// \t&-discription{\n// \t\twidth:470px;\n// \t\tmargin-top:115px;\n// \t}\n// \t&_variables-content{\n// \t\tpadding-left: 5px;;\n// \t}\n\t\n// \t&_variables{\n// \t\tmargin-left: 0;\n// \t\tmargin-top:115px;\n// \t}\n// \t.variables_caption{\n// \t\twidth: 75px;\n// \t}\n// \t&_discription-title img{\n// \t\t\twidth: 160px;\n// \t\t}\n\n// \t}\n\t\n// \t&_photo{\n// \t\twidth:  554px;\n// \t\tmargin-top:60px;\n// \t\tmargin-left: -320px;\n// \t\timg{\n// \t\t\tdisplay:block;\n// \t\t\twidth: 100%;\n// \t\t}\n// \t}\n// }\n\n// .review_discription-content{\n// \tposition:absolute;\n// \tdisplay: none;\n// }\n// .review_discription-content--active{\n// \tdisplay: block;\n// }\n\n// // test2 ***************************************************\n// .test2{\n// \t&_middle {\n// \t\tmargin-bottom:165px;\n// \t}\n// \t&_photo{\n// \t\toverflow:hidden;\n// \t\twidth:  280px;\n// \t\tmargin-top:220px;\n// \t\timg{\n// \t\t\tdisplay:block;\n// \t\t\twidth: 370px;\n// \t\t}\n// \t}\n\t\n// }\n\n// // contact ***************************************************\n// .contact{\n// \t&_data:not(botton){\n// \t\tfont-family: Geometria Bold, sans-serif;\n// \t\tcolor: #000000;\n// \t}\n// \t&_data{\n// \t\tposition:absolute;\n// \t\ttop:200px;\n// \t}\n// }\n\n// .contact .middle-content{\n// \twidth: 100%;\n// \tmargin-left: 0px;\n// \tmargin-bottom: 80px;\n// \tmargin-top: 70px;\n// \tposition:relative;\n// }\n\n// iframe{\n// \topacity:0.5;\n// }"]} */
